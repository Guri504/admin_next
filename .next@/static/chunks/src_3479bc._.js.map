{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Gurpreet%20Singh/next.js/admin_next/src/app/components/multiSelect.js"],"sourcesContent":["\"use client\";\nconst Select = dynamic(() => import('react-select'), {\n    ssr: false,\n});\nimport dynamic from 'next/dynamic';\nimport '../../../public/sass/pages/multiSelect.scss';\n\n\n\n\nconst MultiSelect = () => {\n\n    // Colour Options  \n    const colourOptions = [\n        { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n        { value: 'purple', label: 'Purple', color: '#5243AA' },\n        { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\n        { value: 'orange', label: 'Orange', color: '#FF8B00' },\n        { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n        { value: 'green', label: 'Green', color: '#36B37E' },\n        { value: 'forest', label: 'Forest', color: '#00875A' },\n        { value: 'slate', label: 'Slate', color: '#253858' },\n        { value: 'silver', label: 'Silver', color: '#666666' },\n    ];\n\n    const flavourOptions = [\n        { value: 'vanilla', label: 'Vanilla', rating: 'safe' },\n        { value: 'chocolate', label: 'Chocolate', rating: 'good' },\n        { value: 'strawberry', label: 'Strawberry', rating: 'wild' },\n        { value: 'salted-caramel', label: 'Salted Caramel', rating: 'crazy' },\n    ];\n\n    // Grouped Options  \n    const groupedOptions = [\n        {\n            label: 'Colours',\n            options: colourOptions,\n        },\n        {\n            label: 'Flavours',\n            options: flavourOptions,\n        },\n    ];\n\n\n    const formatGroupLabel = (data) => (\n        <div className='groupStyles'>\n            <span>{data.label}</span>\n        </div>\n    );\n\n\n    // const colourOptions = [\n    //     { value: 'chocolate', label: 'Chocolate' },\n    //     { value: 'strawberry', label: 'Strawberry' },\n    //     { value: 'vanilla', label: 'Vanilla' },\n    // ]\n\n\n    return (\n        <Select\n            className=\"select_main\"\n            classNamePrefix=\"select\"\n            placeholder={\"Select the value\"}\n            isClearable={false}\n            isMulti={false}\n            name=\"color\"\n            formatGroupLabel={formatGroupLabel}\n            options={colourOptions} // for the single and multi select\n        // options={groupedOptions} // for the group options\n        />\n    );\n};\n\nexport default MultiSelect;"],"names":[],"mappings":";;;;AAIA;AAJA;;AACA,MAAM,SAAS,CAAA,GAAA,kKAAA,CAAA,UAAO,AAAD,EAAE,yJAA8B;IACjD,KAAK;AACT;KAFM;;;AASN,MAAM,cAAc;IAEhB,mBAAmB;IACnB,MAAM,gBAAgB;QAClB;YAAE,OAAO;YAAS,OAAO;YAAS,OAAO;YAAW,SAAS;QAAK;QAClE;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAU;QACrD;YAAE,OAAO;YAAO,OAAO;YAAO,OAAO;YAAW,SAAS;QAAK;QAC9D;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAU;QACrD;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAU;QACrD;YAAE,OAAO;YAAS,OAAO;YAAS,OAAO;QAAU;QACnD;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAU;QACrD;YAAE,OAAO;YAAS,OAAO;YAAS,OAAO;QAAU;QACnD;YAAE,OAAO;YAAU,OAAO;YAAU,OAAO;QAAU;KACxD;IAED,MAAM,iBAAiB;QACnB;YAAE,OAAO;YAAW,OAAO;YAAW,QAAQ;QAAO;QACrD;YAAE,OAAO;YAAa,OAAO;YAAa,QAAQ;QAAO;QACzD;YAAE,OAAO;YAAc,OAAO;YAAc,QAAQ;QAAO;QAC3D;YAAE,OAAO;YAAkB,OAAO;YAAkB,QAAQ;QAAQ;KACvE;IAED,oBAAoB;IACpB,MAAM,iBAAiB;QACnB;YACI,OAAO;YACP,SAAS;QACb;QACA;YACI,OAAO;YACP,SAAS;QACb;KACH;IAGD,MAAM,mBAAmB,CAAC,qBACtB,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;0BAAM,KAAK,KAAK;;;;;;;;;;;IAKzB,0BAA0B;IAC1B,kDAAkD;IAClD,oDAAoD;IACpD,8CAA8C;IAC9C,IAAI;IAGJ,qBACI,6LAAC;QACG,WAAU;QACV,iBAAgB;QAChB,aAAa;QACb,aAAa;QACb,SAAS;QACT,MAAK;QACL,kBAAkB;QAClB,SAAS;;;;;;AAIrB;MA9DM;uCAgES"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Gurpreet%20Singh/next.js/admin_next/src/app/components/navBottom.js"],"sourcesContent":["import { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Link from \"next/link\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst NavBottom = (props) => {\r\n\r\n    return (\r\n        <div className='nav_btm'>\r\n            <Row>\r\n                <Col xxl={6} xl={6} lg={6} md={6} sm={6} xs={12}>\r\n                    <div className='left'>\r\n                        <div className='title'>\r\n                            {props.title}\r\n                        </div>\r\n                        {props.paidChip ? <span className='chip'>Paid</span> : ''}\r\n                        {props.pickUpChip ? <span className='chip pick'>Ready To Pickup</span> : ''}\r\n                        {props.created ? <div className='date'>{props.created}</div> : ''}\r\n                    </div>\r\n                </Col>\r\n                <Col xxl={6} xl={6} lg={6} md={6} sm={6} xs={12}>\r\n                    <div className='right'>\r\n                        {props.children}\r\n                        {props.backUrl ?\r\n                            <div className='btn_area'>\r\n                                <Link href={props.backUrl} className='back_btn'>\r\n                                    <span><FontAwesomeIcon icon={faAngleLeft} /></span> Back\r\n                                </Link>\r\n                            </div> : \"\"\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBottom;"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAHA;;;;;;AAKA,MAAM,YAAY,CAAC;IAEf,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC,qLAAA,CAAA,MAAG;;8BACA,6LAAC,qLAAA,CAAA,MAAG;oBAAC,KAAK;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;8BACzC,cAAA,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAI,WAAU;0CACV,MAAM,KAAK;;;;;;4BAEf,MAAM,QAAQ,iBAAG,6LAAC;gCAAK,WAAU;0CAAO;;;;;uCAAc;4BACtD,MAAM,UAAU,iBAAG,6LAAC;gCAAK,WAAU;0CAAY;;;;;uCAAyB;4BACxE,MAAM,OAAO,iBAAG,6LAAC;gCAAI,WAAU;0CAAQ,MAAM,OAAO;;;;;uCAAU;;;;;;;;;;;;8BAGvE,6LAAC,qLAAA,CAAA,MAAG;oBAAC,KAAK;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;oBAAG,IAAI;8BACzC,cAAA,6LAAC;wBAAI,WAAU;;4BACV,MAAM,QAAQ;4BACd,MAAM,OAAO,iBACV,6LAAC;gCAAI,WAAU;0CACX,cAAA,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAM,MAAM,OAAO;oCAAE,WAAU;;sDACjC,6LAAC;sDAAK,cAAA,6LAAC,uKAAA,CAAA,kBAAe;gDAAC,MAAM,2KAAA,CAAA,cAAW;;;;;;;;;;;wCAAW;;;;;;;;;;;uCAElD;;;;;;;;;;;;;;;;;;;;;;;AAOrC;KA9BM;uCAgCS"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Gurpreet%20Singh/next.js/admin_next/src/helpers.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// GET API \r\nconst getApi = async (url) => {\r\n    try {\r\n        let resp = await axios.get(process.env.url + '' + url);\r\n        if (resp.status === 200) {\r\n            return resp.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Fetching Error\", error);\r\n    }\r\n}\r\n\r\n// POST API\r\nconst postApi = async (url, data) => {\r\n    try {\r\n        let resp = await axios.post(process.env.url + '' + url, data);\r\n        if (resp.status === 200) {\r\n            return resp.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Fetching Error\", error)\r\n    }\r\n}\r\n\r\n// PUT API\r\nconst putApi = async (url, data) => {\r\n    try {\r\n        let resp = await axios.put(process.env.url + '' + url, data);\r\n        if (resp.status === 200) {\r\n            return resp.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Fetching Error\", error)\r\n    }\r\n}\r\n\r\n// DELETE API\r\nconst deleteApi = async (url) => {\r\n    try {\r\n        let resp = await axios.delete(process.env.url + '' + url);\r\n        if (resp.status === 200) {\r\n            return resp.data;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Fetching Error\", error)\r\n    }\r\n}\r\n\r\n// Convert a file to base64 string\r\nconst toBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        const fileReader = new FileReader();\r\n\r\n        fileReader.readAsDataURL(file);\r\n\r\n\r\n        fileReader.onload = () => {\r\n            resolve(fileReader.result);\r\n        };\r\n\r\n        fileReader.onerror = (error) => {\r\n            reject(error);\r\n        };\r\n    });\r\n};\r\n\r\n// UPLOAD FILE/IMAGE\r\nconst uploadClick = async (e, setProgress, setImgData, setImg) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n        const base64 = await toBase64(file);\r\n        console.log(\"base64\", base64);\r\n        let saveImage = {\r\n            folder_name: \"admins\",\r\n            resize_large: \"1266*668\",\r\n            resize_medium: \"1166*568\",\r\n            resize_small: \"1066*468\",\r\n            image: base64 ? base64 : null\r\n        }\r\n        let resp = await postApi(\"uploads/base64\", saveImage,\r\n            {\r\n                onUploadProgress: (e) => {\r\n                    const percentCompleted = Math.round((e.loaded * 100) / e.total);\r\n                    requestAnimationFrame(() => {\r\n                        setProgress(percentCompleted)\r\n                    })\r\n                }\r\n            });\r\n        console.log('resp', resp);\r\n        if (resp.imageUrl) {\r\n            setImgData(resp.imageUrl);\r\n            setProgress(0)\r\n            setImg(resp.imageUrl.original)\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchCategories = async (setCategory) => {\r\n    try {\r\n        let resp = await getApi(\"admin/blogsCategory\")\r\n        console.log(\"###\", resp)\r\n        if (resp.status) {\r\n            setCategory(resp.message.map(cat => ({\r\n                value: cat._id,\r\n                label: cat.blogCategoryTitle\r\n            })));\r\n        }\r\n    } catch (error) {\r\n        toast.error(\"Failed to load categories\")\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    getApi,\r\n    toBase64,\r\n    postApi,\r\n    putApi,\r\n    deleteApi,\r\n    uploadClick,\r\n    fetchCategories\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAKmC;;AAHnC,WAAW;AACX,MAAM,SAAS,OAAO;IAClB,IAAI;QACA,IAAI,OAAO,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,6DAAkB,KAAK;QAClD,IAAI,KAAK,MAAM,KAAK,KAAK;YACrB,OAAO,KAAK,IAAI;QACpB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kBAAkB;IACpC;AACJ;AAEA,WAAW;AACX,MAAM,UAAU,OAAO,KAAK;IACxB,IAAI;QACA,IAAI,OAAO,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,6DAAkB,KAAK,KAAK;QACxD,IAAI,KAAK,MAAM,KAAK,KAAK;YACrB,OAAO,KAAK,IAAI;QACpB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kBAAkB;IACpC;AACJ;AAEA,UAAU;AACV,MAAM,SAAS,OAAO,KAAK;IACvB,IAAI;QACA,IAAI,OAAO,MAAM,wIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,6DAAkB,KAAK,KAAK;QACvD,IAAI,KAAK,MAAM,KAAK,KAAK;YACrB,OAAO,KAAK,IAAI;QACpB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kBAAkB;IACpC;AACJ;AAEA,aAAa;AACb,MAAM,YAAY,OAAO;IACrB,IAAI;QACA,IAAI,OAAO,MAAM,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC,6DAAkB,KAAK;QACrD,IAAI,KAAK,MAAM,KAAK,KAAK;YACrB,OAAO,KAAK,IAAI;QACpB;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kBAAkB;IACpC;AACJ;AAEA,kCAAkC;AAClC,MAAM,WAAW,CAAC;IACd,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,MAAM,aAAa,IAAI;QAEvB,WAAW,aAAa,CAAC;QAGzB,WAAW,MAAM,GAAG;YAChB,QAAQ,WAAW,MAAM;QAC7B;QAEA,WAAW,OAAO,GAAG,CAAC;YAClB,OAAO;QACX;IACJ;AACJ;AAEA,oBAAoB;AACpB,MAAM,cAAc,OAAO,GAAG,aAAa,YAAY;IACnD,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;IAChC,IAAI,MAAM;QACN,MAAM,SAAS,MAAM,SAAS;QAC9B,QAAQ,GAAG,CAAC,UAAU;QACtB,IAAI,YAAY;YACZ,aAAa;YACb,cAAc;YACd,eAAe;YACf,cAAc;YACd,OAAO,SAAS,SAAS;QAC7B;QACA,IAAI,OAAO,MAAM,QAAQ,kBAAkB,WACvC;YACI,kBAAkB,CAAC;gBACf,MAAM,mBAAmB,KAAK,KAAK,CAAC,AAAC,EAAE,MAAM,GAAG,MAAO,EAAE,KAAK;gBAC9D,sBAAsB;oBAClB,YAAY;gBAChB;YACJ;QACJ;QACJ,QAAQ,GAAG,CAAC,QAAQ;QACpB,IAAI,KAAK,QAAQ,EAAE;YACf,WAAW,KAAK,QAAQ;YACxB,YAAY;YACZ,OAAO,KAAK,QAAQ,CAAC,QAAQ;QACjC;IACJ;AACJ;AAEA,MAAM,kBAAkB,OAAO;IAC3B,IAAI;QACA,IAAI,OAAO,MAAM,OAAO;QACxB,QAAQ,GAAG,CAAC,OAAO;QACnB,IAAI,KAAK,MAAM,EAAE;YACb,YAAY,KAAK,OAAO,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;oBACjC,OAAO,IAAI,GAAG;oBACd,OAAO,IAAI,iBAAiB;gBAChC,CAAC;QACL;IACJ,EAAE,OAAO,OAAO;QACZ,MAAM,KAAK,CAAC;IAChB;AACJ"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Gurpreet%20Singh/next.js/admin_next/src/app/%28dashboard%29/blogs/add/page.js"],"sourcesContent":["\"use client\";\r\nimport MultiSelect from '@/app/components/multiSelect';\r\nconst Select = dynamic(() => import('react-select'), {\r\n    ssr: false,\r\n});\r\nimport dynamic from 'next/dynamic';\r\nimport '../../../../../public/sass/pages/multiSelect.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Form, InputGroup, ProgressBar, Row } from 'react-bootstrap';\r\nimport '../../../../../public/sass/pages/add.scss';\r\nimport '../../../../../public/sass/pages/homePage.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash, faRedo, faTimes, } from '@fortawesome/free-solid-svg-icons';\r\nimport NavBottom from '@/app/components/navBottom';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { getApi, postApi, toBase64, uploadClick} from '../../../../helpers'\r\nimport Image from 'next/image';\r\nimport { ClientPageRoot } from 'next/dist/client/components/client-page';\r\n\r\n\r\n\r\nconst AddBLog = () => {\r\n\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    const [blogData, setBlogData] = useState({\r\n        title: \"\",\r\n        publishedOn: \"\",\r\n        creatorName: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        subHeading: \"\"\r\n    });\r\n\r\n    const [imgData, setImgData] = useState({});\r\n    const [img, setImg] = useState(\"\");\r\n\r\n    const blogSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            let finalData = {\r\n                ...blogData,\r\n                imageUrl: { ...imgData },\r\n                selected_img: img\r\n            }\r\n\r\n            let resp = await postApi('admin/blog/add', finalData);\r\n            console.log(\"Blog added successfully\", resp)\r\n\r\n            if (resp.status) {\r\n                setBlogData({\r\n                    title: \"\",\r\n                    publishedOn: \"\",\r\n                    creatorName: \"\",\r\n                    description: \"\",\r\n                    category: \"\",\r\n                    subHeading: \"\"\r\n                });\r\n                setImgData({})\r\n                toast(\"Blog Added Successfully\")\r\n            }\r\n            else {\r\n                toast(\"failed to add the blog\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting blog:\", error);\r\n            toast(\"Error in submitting blog\");\r\n        }\r\n    }\r\n\r\n    const blogChange = (e) => {\r\n        setBlogData((prevData) => ({\r\n            ...prevData,\r\n            [e.target.name]: e.target.value\r\n        }));\r\n    }\r\n\r\n    const [categoryData, setCategoryData] = useState([])\r\n    const [category, setCategory] = useState([\r\n        {\r\n            value: '',\r\n            label: ''\r\n        }\r\n    ])\r\n\r\n\r\n    let catData = async () => {\r\n        try {\r\n            let resp = await getApi('admin/blogsCategory')\r\n            if (resp.status) {\r\n                setCategoryData(resp.message)\r\n                const formattedCategories = resp.message.map(item => ({\r\n                    value: item._id,\r\n                    label: item.blogCategoryTitle\r\n                }));\r\n                setCategory(formattedCategories);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Fetching Error\", error)\r\n        }\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        uploadClick(e, setProgress, setImgData, setImg);\r\n        e.currentTarget.value = \"\";\r\n    } \r\n\r\n    const handleDelete = () => {\r\n        setImgData({});\r\n    }\r\n\r\n    useEffect(() => {\r\n        catData(),\r\n            console.log(typeof imgData)\r\n    }, [])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [showPass, setShowPass] = useState(false);\r\n\r\n    return (\r\n        <div className='right_side'>\r\n            <NavBottom backUrl=\"/blogs\" />\r\n            <div className=\"right_area top_spacing\">\r\n                <Card>\r\n                    <div className='card-header'>\r\n                        <div className='header_left'>\r\n                            <div className='heading'>\r\n                                Create New Blog Here\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                        <Form onSubmit={blogSubmit} >\r\n                            <Row>\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Title <span>*</span></Form.Label>\r\n                                        <Form.Control\r\n                                            name='title'\r\n                                            value={blogData.title}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Blog Title\"\r\n                                            onChange={blogChange}\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Published On <span>*</span></Form.Label>\r\n                                        <Form.Control\r\n                                            name='publishedOn'\r\n                                            value={blogData.publishedOn}\r\n                                            type=\"date\"\r\n                                            placeholder=\"Enter Current Date\"\r\n                                            onChange={blogChange}\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Creator Name<span>*</span></Form.Label>\r\n                                        <Form.Control\r\n                                            name='creatorName'\r\n                                            value={blogData.creatorName}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Sub Heading\"\r\n                                            onChange={blogChange}\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Category<span>*</span></Form.Label>\r\n                                        {/* {categoryData?.length > 0 ? categoryData.map((item, index) => ( */}\r\n                                        <Select\r\n                                            className=\"select_main\"\r\n                                            classNamePrefix=\"select\"\r\n                                            placeholder={\"Select the Category\"}\r\n                                            isClearable={false}\r\n                                            isMulti={true}\r\n                                            name=\"category\"\r\n                                            value={category.filter(option => blogData.category.includes(option.value))}\r\n                                            onChange={(selectedOptions) =>\r\n                                                setBlogData(prev => ({ ...prev, category: selectedOptions.map(option => option.value) }))\r\n                                            }\r\n                                            options={category} // for the single and multi select\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={12} xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Sub Heading<span>*</span></Form.Label>\r\n                                        <Form.Control\r\n                                            name='subHeading'\r\n                                            value={blogData.subHeading}\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Sub Heading\"\r\n                                            onChange={blogChange}\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={12} xl={12} lg={12} md={12} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Derscription <span>*</span></Form.Label>\r\n                                        <Form.Control\r\n                                            name='description'\r\n                                            value={blogData.description}\r\n                                            as=\"textarea\"\r\n                                            placeholder=\"Enter Description\"\r\n                                            onChange={blogChange}\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Image <span>*</span></Form.Label>\r\n                                        <div className='d-flex align-items-center gap-3 mb-2'>\r\n                                            <Form.Label htmlFor=\"file-upload\" className='upload m-0' >Upload Image</Form.Label>\r\n                                            <Form.Control\r\n                                                name='image'\r\n                                                type=\"file\"\r\n                                                id=\"file-upload\"\r\n                                                placeholder=\"Upload Image\"\r\n                                                onChange={onFileChange}\r\n                                                onClick={uploadClick}\r\n                                                accept='image'\r\n                                            />\r\n                                            {\r\n                                                Object.keys(imgData).length !== 0 &&\r\n                                                <Form.Select aria-label=\"Default select example\" onChange={(e) => setImg(e.target.value)}>\r\n                                                    {\r\n                                                        Object.entries(imgData).map(([key, value], i) => {\r\n                                                            return <option value={value} key={i}>{key}</option>\r\n                                                        })\r\n                                                    }\r\n                                                </Form.Select>\r\n                                            }\r\n                                        </div>\r\n                                        {/* after upload --------- */}\r\n                                        <div className='upload_img_area'>\r\n                                            {\r\n                                                Object.keys(imgData).length === 0\r\n                                                    ?\r\n                                                    <p>No Image Selected</p>\r\n                                                    :\r\n                                                    <div className='img_area'>\r\n                                                        <span className='cross_icon' onClick={handleDelete}>\r\n                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                        </span>\r\n                                                        <img\r\n                                                            src={process.env.imageUrl + '' + imgData.original}\r\n                                                            alt='blog Image'\r\n                                                            priority=\"low\"\r\n                                                        />\r\n                                                    </div>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col xxl={6} xl={6} lg={6} md={6} sm={12} xs={12}>\r\n                                    <Form.Group className='form-group'>\r\n                                        <Form.Label>Send credentials on email ?</Form.Label>\r\n                                        <Form.Check\r\n                                            type=\"switch\"\r\n                                            id=\"custom-switch\"\r\n                                            label=\"Send credentials on email ?\"\r\n                                            checked={show}\r\n                                            onChange={(event) => setShow(event.target.checked)}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    {show && <Form.Group className='form-group form-group2'>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                placeholder=\"credentials\"\r\n                                                type={showPass ? \"text\" : \"password\"}\r\n                                                className='from-control2'\r\n                                            />\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\" onClick={() => setShowPass(!showPass)}>\r\n                                                <FontAwesomeIcon icon={showPass ? faEye : faEyeSlash} />\r\n                                            </InputGroup.Text>\r\n                                            <InputGroup.Text id=\"inputGroupPrepend\"><FontAwesomeIcon icon={faRedo} /></InputGroup.Text>\r\n                                        </InputGroup>\r\n                                    </Form.Group>}\r\n                                    {\r\n                                        progress > 0 &&\r\n                                        <div className='progress_bar'>\r\n                                            <ProgressBar variant=\"success\" now={progress} style={{ transition: 'all 1.5s ease-in-out' }} />\r\n                                        </div>\r\n                                    }\r\n                                </Col>\r\n                                <div className='btn_area'>\r\n                                    <Button type=\"submit\" >Submit</Button>\r\n                                </div>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <ToastContainer\r\n                closeButton={true}\r\n                closeOnClick={true}\r\n                newestOnTop={true}\r\n                stacked={true}\r\n                limit={5}\r\n                autoClose={2000}\r\n                toastStyle={{ backgroundColor: '#696cff', color: 'white' }}\r\n                position='bottom-right'\r\n                theme='colored'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBLog;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}